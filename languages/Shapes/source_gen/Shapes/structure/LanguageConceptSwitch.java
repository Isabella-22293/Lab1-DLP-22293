package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Canvas = 0;
  public static final int Circle = 1;
  public static final int Color = 2;
  public static final int ColorReference = 3;
  public static final int Shapes = 4;
  public static final int Square = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xab3f66767593453fL, 0x964cd4f83092d6ebL);
    builder.put(0x43d844e9053becdcL, Canvas);
    builder.put(0x43d844e9053becd4L, Circle);
    builder.put(0x43d844e9053cb7afL, Color);
    builder.put(0x43d844e9053d25afL, ColorReference);
    builder.put(0x43d844e9053becd3L, Shapes);
    builder.put(0x43d844e9053becd8L, Square);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
